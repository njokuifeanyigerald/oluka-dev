# Generated by Django 3.1.1 on 2020-09-17 12:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_fname', models.CharField(max_length=100)),
                ('reg_no', models.CharField(blank=True, max_length=100)),
                ('student_email', models.EmailField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='image')),
                ('student_address', models.CharField(max_length=100)),
                ('student_phone', models.CharField(max_length=15)),
                ('highest_level_of_education', models.CharField(choices=[('High School Diploma', 'High School Diploma'), ('Degree', 'Degree'), ('Masters', 'Masters'), ('ND', 'Nd'), ('HND', 'Hnd')], max_length=100)),
                ('dob', models.DateField(null=True)),
                ('employment_status', models.CharField(blank=True, choices=[('Employed', 'Employed'), ('UnEmployed', 'Umemployed'), ('Self-Employed', 'Self Employed'), ('Student', 'Student')], max_length=100, null=True)),
                ('employer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('desired_course', models.CharField(blank=True, max_length=100, null=True)),
                ('referal_code', models.CharField(blank=True, max_length=100, null=True)),
                ('disability', models.BooleanField(default=False)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=100, null=True)),
                ('state_of_origin', models.CharField(choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara'), ('Federal Capital Territory', 'Federal Capital Territory')], max_length=100)),
                ('state_of_residence', models.CharField(choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara'), ('Federal Capital Territory', 'Federal Capital Territory')], max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('course_of_choice', models.CharField(blank=True, choices=[('Computer Hardware Engineering', 'Computer Hardware Engineering'), ('Computer Software Engineering', 'Computer Software Engineering'), ('Networking And System Security', 'Networking And System Security')], max_length=100, null=True)),
                ('course_of_choice2', models.CharField(blank=True, choices=[('Computer Hardware Engineering', 'Computer Hardware Engineering'), ('Computer Software Engineering', 'Computer Software Engineering'), ('Networking And System Security', 'Networking And System Security')], max_length=100, null=True)),
                ('course_enrolled', models.BooleanField(default=False)),
                ('course_plan', models.CharField(choices=[('Crash Course', 'Crash Course'), ('Part Time', 'Part Time'), ('Regular', 'Full Time')], max_length=100)),
                ('nextOfKinFullName', models.CharField(blank=True, max_length=100)),
                ('nextOfKinEmail', models.EmailField(blank=True, max_length=100)),
                ('nextOfKinPhone', models.CharField(blank=True, max_length=100)),
                ('nextOfKinAddress', models.CharField(blank=True, max_length=100)),
                ('nextOfKinRelationship', models.CharField(blank=True, choices=[('Brother', 'Brother'), ('Sister', 'Sister'), ('Father', 'Father'), ('Mother', 'Mother'), ('Relative', 'Relative')], max_length=100)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'student',
            },
        ),
        migrations.CreateModel(
            name='WAEC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('result', models.ImageField(upload_to='', verbose_name='waec')),
                ('accept', models.BooleanField(default=False)),
                ('waec', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentMessages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
            options={
                'verbose_name_plural': 'Messages',
            },
        ),
        migrations.CreateModel(
            name='JambUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.CharField(max_length=30)),
                ('exam_No', models.CharField(max_length=30)),
                ('centre_name', models.CharField(max_length=80)),
                ('subject1', models.CharField(choices=[('English', 'English'), ('Mathematics', 'Mathematics'), ('Biology', 'Biology'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry')], max_length=20)),
                ('subject2', models.CharField(choices=[('English', 'English'), ('Mathematics', 'Mathematics'), ('Biology', 'Biology'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry')], max_length=20)),
                ('subject3', models.CharField(choices=[('English', 'English'), ('Mathematics', 'Mathematics'), ('Biology', 'Biology'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry')], max_length=20)),
                ('subject4', models.CharField(choices=[('English', 'English'), ('Mathematics', 'Mathematics'), ('Biology', 'Biology'), ('Physics', 'Physics'), ('Chemistry', 'Chemistry')], max_length=20)),
                ('score1', models.FloatField()),
                ('score2', models.FloatField()),
                ('score3', models.FloatField()),
                ('score4', models.FloatField()),
                ('jamb_score', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Guardian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_name', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=100)),
                ('occupation', models.CharField(max_length=100)),
                ('phone_no', models.CharField(max_length=15)),
                ('email', models.EmailField(max_length=100)),
                ('city', models.CharField(max_length=30)),
                ('State', models.CharField(choices=[('Abia', 'Abia'), ('Adamawa', 'Adamawa'), ('Akwa Ibom', 'Akwa Ibom'), ('Anambra', 'Anambra'), ('Bauchi', 'Bauchi'), ('Bayelsa', 'Bayelsa'), ('Benue', 'Benue'), ('Borno', 'Borno'), ('Cross River', 'Cross River'), ('Delta', 'Delta'), ('Ebonyi', 'Ebonyi'), ('Edo', 'Edo'), ('Ekiti', 'Ekiti'), ('Enugu', 'Enugu'), ('Gombe', 'Gombe'), ('Imo', 'Imo'), ('Jigawa', 'Jigawa'), ('Kaduna', 'Kaduna'), ('Kano', 'Kano'), ('Katsina', 'Katsina'), ('Kebbi', 'Kebbi'), ('Kogi', 'Kogi'), ('Kwara', 'Kwara'), ('Lagos', 'Lagos'), ('Nasarawa', 'Nasarawa'), ('Niger', 'Niger'), ('Ogun', 'Ogun'), ('Ondo', 'Ondo'), ('Osun', 'Osun'), ('Oyo', 'Oyo'), ('Plateau', 'Plateau'), ('Rivers', 'Rivers'), ('Sokoto', 'Sokoto'), ('Taraba', 'Taraba'), ('Yobe', 'Yobe'), ('Zamfara', 'Zamfara'), ('Federal Capital Territory', 'Federal Capital Territory')], max_length=100)),
                ('relationship', models.CharField(choices=[('Brother', 'Brother'), ('Sister', 'Sister'), ('Father', 'Father'), ('Mother', 'Mother'), ('Relative', 'Relative')], max_length=100)),
                ('guardian', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
        migrations.CreateModel(
            name='Admission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admitted', models.BooleanField(default=False)),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='students.student')),
            ],
        ),
    ]
